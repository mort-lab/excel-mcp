[project]
name = "excel-mcp-server"
version = "0.1.0"
description = "A Model Context Protocol server for comprehensive Excel file manipulation using openpyxl"
readme = "README.md"
requires-python = ">=3.10"
authors = [
    { name = "Martin Irurozki", email = "m.irurozki@gmail.com" }
]
keywords = ["excel", "mcp", "llm", "spreadsheet", "openpyxl", "ai", "automation"]
license = { text = "MIT" }
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Office/Business",
]

dependencies = [
    "mcp>=1.15.0",
    "fastmcp>=2.0.0",
    "openpyxl>=3.1.0",
    "pydantic>=2.0.0",
    "smithery>=0.4.2",
]

[project.scripts]
excel-mcp-server = "excel_mcp_server:main"
dev = "smithery.cli.dev:main"
playground = "smithery.cli.playground:main"

[project.optional-dependencies]
server = ["fastapi>=0.115.0"]

[dependency-groups]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=6.0.0",
    "ruff>=0.8.0",
    "pyright>=1.1.389",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.smithery]
server = "excel_mcp_server.server_smithery:create_server"

[tool.hatch.build.targets.wheel]
packages = ["src/excel_mcp_server"]

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["."]
asyncio_mode = "auto"
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = ["-v", "--tb=short", "--cov=excel_mcp_server", "--cov-report=term-missing"]

[tool.ruff]
line-length = 100
target-version = "py310"
src = ["src"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by formatter)
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.pyright]
include = ["src"]
exclude = ["**/__pycache__", "**/.venv", "**/node_modules"]
pythonVersion = "3.10"
typeCheckingMode = "basic"
